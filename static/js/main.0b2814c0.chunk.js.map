{"version":3,"sources":["edit.js","logado.js","App.js","reportWebVitals.js","index.js"],"names":["Edit","props","useState","nome","QtdeChar","Status","setStatus","className","type","title","dica","onChange","event","novo","target","value","length","Logado","logado","src","alt","onClick","novoValor","avisarLogin","App","EstaDentro","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOA2BeA,G,MAzBF,SAAAC,GAAU,IAAD,EAEMC,mBAAS,CACjCC,KAAM,GACNC,SAAU,IAJQ,mBAEfC,EAFe,KAEPC,EAFO,KAcpB,OACE,sBAAKC,UAAU,OAAf,UACE,uBAAOC,KAAK,OACLC,MAAOR,EAAMS,KACbC,SAAU,SAAAC,GAAK,OAXHC,EAWqBD,EAAME,OAAOC,WAVvDT,EAAU,CACRH,KAAMU,EACNT,SAAUS,EAAKG,SAHnB,IAAuBH,KAanB,4BAAG,0DAA0BR,EAAOD,SAAjC,wBCaMa,EAjCA,SAAAhB,GAEb,IAFsB,EAOIC,mBAAS,CACjCgB,QAAQ,IARY,mBAOjBb,EAPiB,KAOTC,EAPS,KAkBtB,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,SACVY,IAnBM,CAAC,2GACA,kBAkBKd,EAAOa,OAAS,EAAI,GAChCE,IAlBM,CAAC,gBAAiB,mBAkBdf,EAAOa,OAAS,EAAI,KAEnC,4BACE,wBAAQG,QAAS,kBAdDC,GAcqBjB,EAAOa,OAbhDZ,EAAU,CACRY,OAAQI,SAEVrB,EAAMsB,YAAYD,GAJpB,IAAsBA,GAchB,SApBS,CAAC,iBAAkB,cAqBnBjB,EAAOa,OAAS,EAAI,WCLtBM,MAlBf,WAAgB,IAAD,EAEatB,mBAAS,CACjCuB,YAAY,IAHD,mBAERpB,EAFQ,KAEAC,EAFA,KAMb,OACE,sBAAKC,UAAU,MAAf,UAEGF,EAAOoB,WACP,yDAA2B,cAAC,EAAD,CAAMf,KAAK,uBACtC,wBAED,8BAAK,cAAC,EAAD,CAAQa,YAAa,SAACD,GAAD,OAAehB,EAAU,CAACmB,WAAYH,aCNvDI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b2814c0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst Edit = props => {\r\n\r\n  let [Status, setStatus] = useState({\r\n    nome: '',\r\n    QtdeChar: 0\r\n  });\r\n  \r\n  function trataonchange(novo) {\r\n    setStatus({\r\n      nome: novo,\r\n      QtdeChar: novo.length\r\n    });\r\n  }\r\n\r\n  return(\r\n    <div className=\"edit\">\r\n      <input type=\"text\" \r\n             title={props.dica} \r\n             onChange={event => trataonchange(event.target.value)}>\r\n      </input>\r\n      <p><label>Este texto cont√©m {Status.QtdeChar} caracteres</label></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Edit;","import React, {useState} from 'react';\r\n\r\nconst Logado = props => {\r\n\r\n  const images = [\"https://image.freepik.com/fotos-gratis/mulher-negra-de-negocios-convidando-alguem-para-vir_1187-6478.jpg\", \r\n                  \"JaPodeSair.png\"];\r\n  const info   = [\"camarada fora\", \"camarada dentro\"];\r\n  const botao  = [\"Vamos entrar ?\", \"Quero sair\"];\r\n\r\n  let [Status, setStatus] = useState({\r\n    logado: false\r\n  });\r\n  \r\n  function trataonclick(novoValor) {\r\n    setStatus({\r\n      logado: novoValor\r\n    });\r\n    props.avisarLogin(novoValor);\r\n  }\r\n\r\n  return(\r\n    <div className=\"identificaLogado\">\r\n      <img className=\"imagem\" \r\n           src={images[Status.logado ? 1 : 0]} \r\n           alt={info[Status.logado ? 1 : 0]}>\r\n      </img>\r\n      <p>\r\n        <button onClick={() => trataonclick(!Status.logado)}>\r\n          {botao[Status.logado ? 1 : 0]}\r\n        </button>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logado;","import './App.css';\nimport React, {useState} from 'react';\nimport Edit from './edit';\nimport Logado from './logado';\n\nfunction App() {\n\n  let [Status, setStatus] = useState({\n    EstaDentro: false\n  });\n\n  return (\n    <div className=\"App\">\n     \n      {Status.EstaDentro ? \n       <div>Comece a digitar algo <Edit dica='digite seu nome'></Edit></div> : \n       <div></div>}\n\n      <div><Logado avisarLogin={(novoValor) => setStatus({EstaDentro: novoValor})}></Logado></div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}